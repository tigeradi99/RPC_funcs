# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: messagefile.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='messagefile.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x11messagefile.proto\"*\n\x07TimeVal\x12\x0e\n\x06tv_sec\x18\x01 \x01(\r\x12\x0f\n\x07tv_usec\x18\x02 \x01(\r\"\xb1\x01\n\x15ledc_channel_config_t\x12\x10\n\x08gpio_num\x18\x01 \x01(\x05\x12 \n\nspeed_mode\x18\x02 \x01(\x0b\x32\x0c.ledc_mode_t\x12 \n\x07\x63hannel\x18\x03 \x01(\x0b\x32\x0f.ledc_channel_t\x12$\n\tintr_type\x18\x04 \x01(\x0b\x32\x11.ledc_intr_type_t\x12\x0c\n\x04\x64uty\x18\x05 \x01(\r\x12\x0e\n\x06hpoint\x18\x06 \x01(\x05\"\x83\x01\n\x10ledc_intr_type_t\x12.\n\x04intr\x18\x01 \x01(\x0e\x32 .ledc_intr_type_t.interrupt_type\"?\n\x0einterrupt_type\x12\x15\n\x11LEDC_INTR_DISABLE\x10\x00\x12\x16\n\x12LEDC_INTR_FADE_END\x10\x01\"!\n\x0eledc_channel_t\x12\x0f\n\x07\x63hannel\x18\x01 \x01(\x05\"\x96\x01\n\x0bledc_mode_t\x12,\n\nledc_speed\x18\x01 \x01(\x0e\x32\x18.ledc_mode_t.ledc_mode_e\"Y\n\x0bledc_mode_e\x12\x18\n\x14LEDC_HIGH_SPEED_MODE\x10\x00\x12\x17\n\x13LEDC_LOW_SPEED_MODE\x10\x01\x12\x17\n\x13LEDC_SPEED_MODE_MAX\x10\x02\"\xa1\x01\n\x14i2cOperationsRequest\x12\x17\n\x0fmaster_sda_gpio\x18\x01 \x01(\x05\x12\x17\n\x0fmaster_scl_gpio\x18\x02 \x01(\x05\x12\x13\n\x0b\x63lock_speed\x18\x03 \x01(\x05\x12\x12\n\nslave_addr\x18\x04 \x01(\x05\x12\x16\n\x0eslave_sda_gpio\x18\x05 \x01(\x05\x12\x16\n\x0eslave_scl_gpio\x18\x06 \x01(\x05\"(\n\x15i2cOperationsResponse\x12\x0f\n\x07success\x18\x01 \x01(\x05\"0\n\x13SettimeofdayRequest\x12\x19\n\x07timeval\x18\x01 \x01(\x0b\x32\x08.TimeVal\"?\n\x14SettimeofdayResponse\x12\x14\n\x0creturn_value\x18\x01 \x01(\x11\x12\x11\n\terrno_alt\x18\x02 \x01(\x11\"#\n\x13GettimeofdayRequest\x12\x0c\n\x04stub\x18\x01 \x01(\x05\"Z\n\x14GettimeofdayResponse\x12\x14\n\x0creturn_value\x18\x01 \x01(\x11\x12\x11\n\terrno_alt\x18\x02 \x01(\x11\x12\x19\n\x07timeval\x18\x03 \x01(\x0b\x32\x08.TimeVal\"H\n\x1bledc_channel_config_Request\x12)\n\tledc_conf\x18\x01 \x01(\x0b\x32\x16.ledc_channel_config_t\"5\n\x1cledc_channel_config_Response\x12\x15\n\rconfig_status\x18\x01 \x01(\x05\"\xf7\x01\n\x07Request\x12\x34\n\x14settimeofday_request\x18\x01 \x01(\x0b\x32\x14.SettimeofdayRequestH\x00\x12\x34\n\x14gettimeofday_request\x18\x02 \x01(\x0b\x32\x14.GettimeofdayRequestH\x00\x12\x43\n\x1bledc_channel_config_request\x18\x03 \x01(\x0b\x32\x1c.ledc_channel_config_RequestH\x00\x12,\n\x0bi2c_request\x18\x04 \x01(\x0b\x32\x15.i2cOperationsRequestH\x00\x42\r\n\x0bRequestFunc\"\x81\x02\n\x08Response\x12\x36\n\x15settimeofday_response\x18\x01 \x01(\x0b\x32\x15.SettimeofdayResponseH\x00\x12\x36\n\x15gettimeofday_response\x18\x02 \x01(\x0b\x32\x15.GettimeofdayResponseH\x00\x12\x45\n\x1cledc_channel_config_response\x18\x03 \x01(\x0b\x32\x1d.ledc_channel_config_ResponseH\x00\x12.\n\x0ci2c_response\x18\x04 \x01(\x0b\x32\x16.i2cOperationsResponseH\x00\x42\x0e\n\x0cResponseFunc\"v\n\x0bxRPCMessage\x12\x1b\n\x07request\x18\x01 \x01(\x0b\x32\x08.RequestH\x00\x12\x1d\n\x08response\x18\x02 \x01(\x0b\x32\t.ResponseH\x00\x12\x1c\n\ntime_stamp\x18\x03 \x01(\x0b\x32\x08.TimeValB\r\n\x0bMessageTypeb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_LEDC_INTR_TYPE_T_INTERRUPT_TYPE = _descriptor.EnumDescriptor(
  name='interrupt_type',
  full_name='ledc_intr_type_t.interrupt_type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LEDC_INTR_DISABLE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LEDC_INTR_FADE_END', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=314,
  serialized_end=377,
)
_sym_db.RegisterEnumDescriptor(_LEDC_INTR_TYPE_T_INTERRUPT_TYPE)

_LEDC_MODE_T_LEDC_MODE_E = _descriptor.EnumDescriptor(
  name='ledc_mode_e',
  full_name='ledc_mode_t.ledc_mode_e',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LEDC_HIGH_SPEED_MODE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LEDC_LOW_SPEED_MODE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LEDC_SPEED_MODE_MAX', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=476,
  serialized_end=565,
)
_sym_db.RegisterEnumDescriptor(_LEDC_MODE_T_LEDC_MODE_E)


_TIMEVAL = _descriptor.Descriptor(
  name='TimeVal',
  full_name='TimeVal',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tv_sec', full_name='TimeVal.tv_sec', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tv_usec', full_name='TimeVal.tv_usec', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=63,
)


_LEDC_CHANNEL_CONFIG_T = _descriptor.Descriptor(
  name='ledc_channel_config_t',
  full_name='ledc_channel_config_t',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='gpio_num', full_name='ledc_channel_config_t.gpio_num', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='speed_mode', full_name='ledc_channel_config_t.speed_mode', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channel', full_name='ledc_channel_config_t.channel', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='intr_type', full_name='ledc_channel_config_t.intr_type', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='duty', full_name='ledc_channel_config_t.duty', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hpoint', full_name='ledc_channel_config_t.hpoint', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=66,
  serialized_end=243,
)


_LEDC_INTR_TYPE_T = _descriptor.Descriptor(
  name='ledc_intr_type_t',
  full_name='ledc_intr_type_t',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='intr', full_name='ledc_intr_type_t.intr', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LEDC_INTR_TYPE_T_INTERRUPT_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=246,
  serialized_end=377,
)


_LEDC_CHANNEL_T = _descriptor.Descriptor(
  name='ledc_channel_t',
  full_name='ledc_channel_t',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel', full_name='ledc_channel_t.channel', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=379,
  serialized_end=412,
)


_LEDC_MODE_T = _descriptor.Descriptor(
  name='ledc_mode_t',
  full_name='ledc_mode_t',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ledc_speed', full_name='ledc_mode_t.ledc_speed', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LEDC_MODE_T_LEDC_MODE_E,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=415,
  serialized_end=565,
)


_I2COPERATIONSREQUEST = _descriptor.Descriptor(
  name='i2cOperationsRequest',
  full_name='i2cOperationsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='master_sda_gpio', full_name='i2cOperationsRequest.master_sda_gpio', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='master_scl_gpio', full_name='i2cOperationsRequest.master_scl_gpio', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='clock_speed', full_name='i2cOperationsRequest.clock_speed', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='slave_addr', full_name='i2cOperationsRequest.slave_addr', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='slave_sda_gpio', full_name='i2cOperationsRequest.slave_sda_gpio', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='slave_scl_gpio', full_name='i2cOperationsRequest.slave_scl_gpio', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=568,
  serialized_end=729,
)


_I2COPERATIONSRESPONSE = _descriptor.Descriptor(
  name='i2cOperationsResponse',
  full_name='i2cOperationsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='i2cOperationsResponse.success', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=731,
  serialized_end=771,
)


_SETTIMEOFDAYREQUEST = _descriptor.Descriptor(
  name='SettimeofdayRequest',
  full_name='SettimeofdayRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timeval', full_name='SettimeofdayRequest.timeval', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=773,
  serialized_end=821,
)


_SETTIMEOFDAYRESPONSE = _descriptor.Descriptor(
  name='SettimeofdayResponse',
  full_name='SettimeofdayResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='return_value', full_name='SettimeofdayResponse.return_value', index=0,
      number=1, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errno_alt', full_name='SettimeofdayResponse.errno_alt', index=1,
      number=2, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=823,
  serialized_end=886,
)


_GETTIMEOFDAYREQUEST = _descriptor.Descriptor(
  name='GettimeofdayRequest',
  full_name='GettimeofdayRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='stub', full_name='GettimeofdayRequest.stub', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=888,
  serialized_end=923,
)


_GETTIMEOFDAYRESPONSE = _descriptor.Descriptor(
  name='GettimeofdayResponse',
  full_name='GettimeofdayResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='return_value', full_name='GettimeofdayResponse.return_value', index=0,
      number=1, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errno_alt', full_name='GettimeofdayResponse.errno_alt', index=1,
      number=2, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timeval', full_name='GettimeofdayResponse.timeval', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=925,
  serialized_end=1015,
)


_LEDC_CHANNEL_CONFIG_REQUEST = _descriptor.Descriptor(
  name='ledc_channel_config_Request',
  full_name='ledc_channel_config_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ledc_conf', full_name='ledc_channel_config_Request.ledc_conf', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1017,
  serialized_end=1089,
)


_LEDC_CHANNEL_CONFIG_RESPONSE = _descriptor.Descriptor(
  name='ledc_channel_config_Response',
  full_name='ledc_channel_config_Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='config_status', full_name='ledc_channel_config_Response.config_status', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1091,
  serialized_end=1144,
)


_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='settimeofday_request', full_name='Request.settimeofday_request', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='gettimeofday_request', full_name='Request.gettimeofday_request', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ledc_channel_config_request', full_name='Request.ledc_channel_config_request', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='i2c_request', full_name='Request.i2c_request', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='RequestFunc', full_name='Request.RequestFunc',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1147,
  serialized_end=1394,
)


_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='settimeofday_response', full_name='Response.settimeofday_response', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='gettimeofday_response', full_name='Response.gettimeofday_response', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ledc_channel_config_response', full_name='Response.ledc_channel_config_response', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='i2c_response', full_name='Response.i2c_response', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='ResponseFunc', full_name='Response.ResponseFunc',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1397,
  serialized_end=1654,
)


_XRPCMESSAGE = _descriptor.Descriptor(
  name='xRPCMessage',
  full_name='xRPCMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='request', full_name='xRPCMessage.request', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='response', full_name='xRPCMessage.response', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='time_stamp', full_name='xRPCMessage.time_stamp', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='MessageType', full_name='xRPCMessage.MessageType',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1656,
  serialized_end=1774,
)

_LEDC_CHANNEL_CONFIG_T.fields_by_name['speed_mode'].message_type = _LEDC_MODE_T
_LEDC_CHANNEL_CONFIG_T.fields_by_name['channel'].message_type = _LEDC_CHANNEL_T
_LEDC_CHANNEL_CONFIG_T.fields_by_name['intr_type'].message_type = _LEDC_INTR_TYPE_T
_LEDC_INTR_TYPE_T.fields_by_name['intr'].enum_type = _LEDC_INTR_TYPE_T_INTERRUPT_TYPE
_LEDC_INTR_TYPE_T_INTERRUPT_TYPE.containing_type = _LEDC_INTR_TYPE_T
_LEDC_MODE_T.fields_by_name['ledc_speed'].enum_type = _LEDC_MODE_T_LEDC_MODE_E
_LEDC_MODE_T_LEDC_MODE_E.containing_type = _LEDC_MODE_T
_SETTIMEOFDAYREQUEST.fields_by_name['timeval'].message_type = _TIMEVAL
_GETTIMEOFDAYRESPONSE.fields_by_name['timeval'].message_type = _TIMEVAL
_LEDC_CHANNEL_CONFIG_REQUEST.fields_by_name['ledc_conf'].message_type = _LEDC_CHANNEL_CONFIG_T
_REQUEST.fields_by_name['settimeofday_request'].message_type = _SETTIMEOFDAYREQUEST
_REQUEST.fields_by_name['gettimeofday_request'].message_type = _GETTIMEOFDAYREQUEST
_REQUEST.fields_by_name['ledc_channel_config_request'].message_type = _LEDC_CHANNEL_CONFIG_REQUEST
_REQUEST.fields_by_name['i2c_request'].message_type = _I2COPERATIONSREQUEST
_REQUEST.oneofs_by_name['RequestFunc'].fields.append(
  _REQUEST.fields_by_name['settimeofday_request'])
_REQUEST.fields_by_name['settimeofday_request'].containing_oneof = _REQUEST.oneofs_by_name['RequestFunc']
_REQUEST.oneofs_by_name['RequestFunc'].fields.append(
  _REQUEST.fields_by_name['gettimeofday_request'])
_REQUEST.fields_by_name['gettimeofday_request'].containing_oneof = _REQUEST.oneofs_by_name['RequestFunc']
_REQUEST.oneofs_by_name['RequestFunc'].fields.append(
  _REQUEST.fields_by_name['ledc_channel_config_request'])
_REQUEST.fields_by_name['ledc_channel_config_request'].containing_oneof = _REQUEST.oneofs_by_name['RequestFunc']
_REQUEST.oneofs_by_name['RequestFunc'].fields.append(
  _REQUEST.fields_by_name['i2c_request'])
_REQUEST.fields_by_name['i2c_request'].containing_oneof = _REQUEST.oneofs_by_name['RequestFunc']
_RESPONSE.fields_by_name['settimeofday_response'].message_type = _SETTIMEOFDAYRESPONSE
_RESPONSE.fields_by_name['gettimeofday_response'].message_type = _GETTIMEOFDAYRESPONSE
_RESPONSE.fields_by_name['ledc_channel_config_response'].message_type = _LEDC_CHANNEL_CONFIG_RESPONSE
_RESPONSE.fields_by_name['i2c_response'].message_type = _I2COPERATIONSRESPONSE
_RESPONSE.oneofs_by_name['ResponseFunc'].fields.append(
  _RESPONSE.fields_by_name['settimeofday_response'])
_RESPONSE.fields_by_name['settimeofday_response'].containing_oneof = _RESPONSE.oneofs_by_name['ResponseFunc']
_RESPONSE.oneofs_by_name['ResponseFunc'].fields.append(
  _RESPONSE.fields_by_name['gettimeofday_response'])
_RESPONSE.fields_by_name['gettimeofday_response'].containing_oneof = _RESPONSE.oneofs_by_name['ResponseFunc']
_RESPONSE.oneofs_by_name['ResponseFunc'].fields.append(
  _RESPONSE.fields_by_name['ledc_channel_config_response'])
_RESPONSE.fields_by_name['ledc_channel_config_response'].containing_oneof = _RESPONSE.oneofs_by_name['ResponseFunc']
_RESPONSE.oneofs_by_name['ResponseFunc'].fields.append(
  _RESPONSE.fields_by_name['i2c_response'])
_RESPONSE.fields_by_name['i2c_response'].containing_oneof = _RESPONSE.oneofs_by_name['ResponseFunc']
_XRPCMESSAGE.fields_by_name['request'].message_type = _REQUEST
_XRPCMESSAGE.fields_by_name['response'].message_type = _RESPONSE
_XRPCMESSAGE.fields_by_name['time_stamp'].message_type = _TIMEVAL
_XRPCMESSAGE.oneofs_by_name['MessageType'].fields.append(
  _XRPCMESSAGE.fields_by_name['request'])
_XRPCMESSAGE.fields_by_name['request'].containing_oneof = _XRPCMESSAGE.oneofs_by_name['MessageType']
_XRPCMESSAGE.oneofs_by_name['MessageType'].fields.append(
  _XRPCMESSAGE.fields_by_name['response'])
_XRPCMESSAGE.fields_by_name['response'].containing_oneof = _XRPCMESSAGE.oneofs_by_name['MessageType']
DESCRIPTOR.message_types_by_name['TimeVal'] = _TIMEVAL
DESCRIPTOR.message_types_by_name['ledc_channel_config_t'] = _LEDC_CHANNEL_CONFIG_T
DESCRIPTOR.message_types_by_name['ledc_intr_type_t'] = _LEDC_INTR_TYPE_T
DESCRIPTOR.message_types_by_name['ledc_channel_t'] = _LEDC_CHANNEL_T
DESCRIPTOR.message_types_by_name['ledc_mode_t'] = _LEDC_MODE_T
DESCRIPTOR.message_types_by_name['i2cOperationsRequest'] = _I2COPERATIONSREQUEST
DESCRIPTOR.message_types_by_name['i2cOperationsResponse'] = _I2COPERATIONSRESPONSE
DESCRIPTOR.message_types_by_name['SettimeofdayRequest'] = _SETTIMEOFDAYREQUEST
DESCRIPTOR.message_types_by_name['SettimeofdayResponse'] = _SETTIMEOFDAYRESPONSE
DESCRIPTOR.message_types_by_name['GettimeofdayRequest'] = _GETTIMEOFDAYREQUEST
DESCRIPTOR.message_types_by_name['GettimeofdayResponse'] = _GETTIMEOFDAYRESPONSE
DESCRIPTOR.message_types_by_name['ledc_channel_config_Request'] = _LEDC_CHANNEL_CONFIG_REQUEST
DESCRIPTOR.message_types_by_name['ledc_channel_config_Response'] = _LEDC_CHANNEL_CONFIG_RESPONSE
DESCRIPTOR.message_types_by_name['Request'] = _REQUEST
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
DESCRIPTOR.message_types_by_name['xRPCMessage'] = _XRPCMESSAGE

TimeVal = _reflection.GeneratedProtocolMessageType('TimeVal', (_message.Message,), dict(
  DESCRIPTOR = _TIMEVAL,
  __module__ = 'messagefile_pb2'
  # @@protoc_insertion_point(class_scope:TimeVal)
  ))
_sym_db.RegisterMessage(TimeVal)

ledc_channel_config_t = _reflection.GeneratedProtocolMessageType('ledc_channel_config_t', (_message.Message,), dict(
  DESCRIPTOR = _LEDC_CHANNEL_CONFIG_T,
  __module__ = 'messagefile_pb2'
  # @@protoc_insertion_point(class_scope:ledc_channel_config_t)
  ))
_sym_db.RegisterMessage(ledc_channel_config_t)

ledc_intr_type_t = _reflection.GeneratedProtocolMessageType('ledc_intr_type_t', (_message.Message,), dict(
  DESCRIPTOR = _LEDC_INTR_TYPE_T,
  __module__ = 'messagefile_pb2'
  # @@protoc_insertion_point(class_scope:ledc_intr_type_t)
  ))
_sym_db.RegisterMessage(ledc_intr_type_t)

ledc_channel_t = _reflection.GeneratedProtocolMessageType('ledc_channel_t', (_message.Message,), dict(
  DESCRIPTOR = _LEDC_CHANNEL_T,
  __module__ = 'messagefile_pb2'
  # @@protoc_insertion_point(class_scope:ledc_channel_t)
  ))
_sym_db.RegisterMessage(ledc_channel_t)

ledc_mode_t = _reflection.GeneratedProtocolMessageType('ledc_mode_t', (_message.Message,), dict(
  DESCRIPTOR = _LEDC_MODE_T,
  __module__ = 'messagefile_pb2'
  # @@protoc_insertion_point(class_scope:ledc_mode_t)
  ))
_sym_db.RegisterMessage(ledc_mode_t)

i2cOperationsRequest = _reflection.GeneratedProtocolMessageType('i2cOperationsRequest', (_message.Message,), dict(
  DESCRIPTOR = _I2COPERATIONSREQUEST,
  __module__ = 'messagefile_pb2'
  # @@protoc_insertion_point(class_scope:i2cOperationsRequest)
  ))
_sym_db.RegisterMessage(i2cOperationsRequest)

i2cOperationsResponse = _reflection.GeneratedProtocolMessageType('i2cOperationsResponse', (_message.Message,), dict(
  DESCRIPTOR = _I2COPERATIONSRESPONSE,
  __module__ = 'messagefile_pb2'
  # @@protoc_insertion_point(class_scope:i2cOperationsResponse)
  ))
_sym_db.RegisterMessage(i2cOperationsResponse)

SettimeofdayRequest = _reflection.GeneratedProtocolMessageType('SettimeofdayRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETTIMEOFDAYREQUEST,
  __module__ = 'messagefile_pb2'
  # @@protoc_insertion_point(class_scope:SettimeofdayRequest)
  ))
_sym_db.RegisterMessage(SettimeofdayRequest)

SettimeofdayResponse = _reflection.GeneratedProtocolMessageType('SettimeofdayResponse', (_message.Message,), dict(
  DESCRIPTOR = _SETTIMEOFDAYRESPONSE,
  __module__ = 'messagefile_pb2'
  # @@protoc_insertion_point(class_scope:SettimeofdayResponse)
  ))
_sym_db.RegisterMessage(SettimeofdayResponse)

GettimeofdayRequest = _reflection.GeneratedProtocolMessageType('GettimeofdayRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETTIMEOFDAYREQUEST,
  __module__ = 'messagefile_pb2'
  # @@protoc_insertion_point(class_scope:GettimeofdayRequest)
  ))
_sym_db.RegisterMessage(GettimeofdayRequest)

GettimeofdayResponse = _reflection.GeneratedProtocolMessageType('GettimeofdayResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETTIMEOFDAYRESPONSE,
  __module__ = 'messagefile_pb2'
  # @@protoc_insertion_point(class_scope:GettimeofdayResponse)
  ))
_sym_db.RegisterMessage(GettimeofdayResponse)

ledc_channel_config_Request = _reflection.GeneratedProtocolMessageType('ledc_channel_config_Request', (_message.Message,), dict(
  DESCRIPTOR = _LEDC_CHANNEL_CONFIG_REQUEST,
  __module__ = 'messagefile_pb2'
  # @@protoc_insertion_point(class_scope:ledc_channel_config_Request)
  ))
_sym_db.RegisterMessage(ledc_channel_config_Request)

ledc_channel_config_Response = _reflection.GeneratedProtocolMessageType('ledc_channel_config_Response', (_message.Message,), dict(
  DESCRIPTOR = _LEDC_CHANNEL_CONFIG_RESPONSE,
  __module__ = 'messagefile_pb2'
  # @@protoc_insertion_point(class_scope:ledc_channel_config_Response)
  ))
_sym_db.RegisterMessage(ledc_channel_config_Response)

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
  DESCRIPTOR = _REQUEST,
  __module__ = 'messagefile_pb2'
  # @@protoc_insertion_point(class_scope:Request)
  ))
_sym_db.RegisterMessage(Request)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSE,
  __module__ = 'messagefile_pb2'
  # @@protoc_insertion_point(class_scope:Response)
  ))
_sym_db.RegisterMessage(Response)

xRPCMessage = _reflection.GeneratedProtocolMessageType('xRPCMessage', (_message.Message,), dict(
  DESCRIPTOR = _XRPCMESSAGE,
  __module__ = 'messagefile_pb2'
  # @@protoc_insertion_point(class_scope:xRPCMessage)
  ))
_sym_db.RegisterMessage(xRPCMessage)


# @@protoc_insertion_point(module_scope)
